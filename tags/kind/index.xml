<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kind on Duffie Cooley</title>
    <link>https://mauilion.dev/tags/kind/</link>
    <description>Recent content in kind on Duffie Cooley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 12 May 2020 21:09:00 -0700</lastBuildDate><atom:link href="https://mauilion.dev/tags/kind/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Accessing Local Data from inside Kind!</title>
      <link>https://mauilion.dev/posts/kind-pvc-localdata/</link>
      <pubDate>Tue, 12 May 2020 21:09:00 -0700</pubDate>
      
      <guid>https://mauilion.dev/posts/kind-pvc-localdata/</guid>
      <description>&lt;p&gt;Following on from the &lt;a href=&#34;../kind-PVc&#34;&gt;recent kind PVc&lt;/a&gt; post. In this post we
will explore how to bring up a kind cluster and use it to access data that you
have locally on your machine via Persistent Volume Claims.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kind Persistent Volumes</title>
      <link>https://mauilion.dev/posts/kind-pvc/</link>
      <pubDate>Sun, 10 May 2020 14:50:57 -0700</pubDate>
      
      <guid>https://mauilion.dev/posts/kind-pvc/</guid>
      <description>&lt;p&gt;Hey Frens! This week we are exploring portable persistent volumes in kind!
This is a pretty neat and funky trick!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Kind to test a pr for Kubernetes.</title>
      <link>https://mauilion.dev/posts/kind-k8s-testing/</link>
      <pubDate>Wed, 08 May 2019 09:37:30 -0700</pubDate>
      
      <guid>https://mauilion.dev/posts/kind-k8s-testing/</guid>
      <description>Setup I am looking to validate a set of changes produced by this PR.
https://github.com/kubernetes/kubernetes/pull/77523
In this post I want to show a few things.
 setup a go environment. build kind checkout the k8s.io/kubernetes source bring up a cluster to repoduce the issue. build an image based on Andrews changes bring up a cluster with that image validate that the changes have the desired affect.  Prerequisites There is a pretty handy tool called gimme put out by the travis-ci folks.</description>
    </item>
    
    <item>
      <title>Using MetalLb with Kind</title>
      <link>https://mauilion.dev/posts/kind-metallb/</link>
      <pubDate>Wed, 17 Apr 2019 10:44:33 -0700</pubDate>
      
      <guid>https://mauilion.dev/posts/kind-metallb/</guid>
      <description>Preamble: When using metallb with kind we are going to deploy it in l2-mode. This means that we need to be able to connect to the ip addresses of the node subnet. If you are using linux to host a kind cluster. You will not need to do this as the kind node ip addresses are directly attached.
If you are using a Mac this tutorial may not be super useful as the way Docker Desktop works on a Mac doesn&amp;rsquo;t expose the &amp;ldquo;docker network&amp;rdquo; to the underlying host.</description>
    </item>
    
    <item>
      <title>Presenting to the San Francisco Kubernetes Meetup about kind!&#34;</title>
      <link>https://mauilion.dev/posts/kind-demo/</link>
      <pubDate>Wed, 10 Apr 2019 15:28:10 -0700</pubDate>
      
      <guid>https://mauilion.dev/posts/kind-demo/</guid>
      <description>On 4/7/2019 I had the opportunity to talk to folks that attended the SF Kubernetes meetup Anaplan about kind!
It&amp;rsquo;s a great project and I end up using kind everyday to validate or develop designs for Kubernetes clusters.
The slides that I presented are here: mauilion.github.io/kind-demo and a link to the repository with the deck and the content used to bring up the demo cluster is here: github.com/mauilion/kind-demo

In the talk I dug in a bit about what kind and kubeadm are and what problems they solve.</description>
    </item>
    
  </channel>
</rss>
