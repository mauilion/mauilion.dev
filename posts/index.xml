<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Duffie Cooley</title>
		<link>https://mauilion.dev/posts/</link>
		<description>Recent content in Posts on Duffie Cooley</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Mon, 18 Mar 2019 16:25:23 -0700</lastBuildDate>
		<atom:link href="https://mauilion.dev/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>debugging tools: a preconfigured etcdclient static pod</title>
			<link>https://mauilion.dev/posts/etcdclient/</link>
			<pubDate>Mon, 18 Mar 2019 16:25:23 -0700</pubDate>
			
			<guid>https://mauilion.dev/posts/etcdclient/</guid>
			<description>&lt;p&gt;&lt;img src=&#34;https://mauilion.dev/etcdctl_kubeadm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In this post I am going to discuss &lt;a href=&#34;https://git.io/etcdclient.yaml&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;git.io/etcdclient.yaml&lt;/a&gt; and why it&amp;rsquo;s neat!&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p><img src="/etcdctl_kubeadm.png" alt="" /></p>

<p>In this post I am going to discuss <a href="https://git.io/etcdclient.yaml" rel="nofollow noreferrer" target="_blank">git.io/etcdclient.yaml</a> and why it&rsquo;s neat!</p>

<p>When putting together content for a series of blog posts that I am doing around etcd recovery and failure scenarios, I realized that I was configuring the etcdclient to interact with the etcd cluster that kubeadm stands up.</p>

<p>I wanted to create a static pod that would sit on the same node as the static pod that operates the etcd server so that I can use it to troubleshoot the etcd cluster that kubeadm is bringing up.</p>

<p><a href="https://git.io/etcdclient.yaml" rel="nofollow noreferrer" target="_blank">git.io/etcdclient.yaml</a> is an attempt to DRY (do not repeat yourself) work up.</p>

<p>It makes a set of assumptions.</p>

<ol>
<li>That etcd has been created by kubeadm as a <code>local etcd</code></li>
<li>That we have well defined locations for certs on the underlying file system layed down by kubeadm.</li>
<li>That etcd is listening on localhost and a node ip or for our purposes at the very least localhost.</li>
</ol>

<p>The static pod looks like:</p>

<script type="application/javascript" src="//gist.github.com/mauilion/2bab4b00eb7a0ab4fca7023ae251e8ee.js"></script>

<p>The interesting bits are the env vars that configure etcdclient on your behalf.</p>

<p>With etcd and etcdclient the arguments that you can pass at the cli are also <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/configuration.md" rel="nofollow noreferrer" target="_blank">exposed as environment variables</a>.</p>

<p>Now to see it in action!</p>

<p>
    <asciinema-player
        src="/casts/etcdclient.cast"
        cols="640"
        rows="30"
        
        preload="1"
        
        start-at="0"
        speed="1"
        
        
        
        
        
        
        
        
    ></asciinema-player>
</p>]]></content>
		</item>
		
	</channel>
</rss>
